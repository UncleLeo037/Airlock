[gd_scene load_steps=5 format=3 uid="uid://b5atyrjhv38kh"]

[sub_resource type="GDScript" id="GDScript_dkjbp"]
script/source = "extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5



func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"ui_left\", \"ui_right\", \"ui_up\", \"ui_down\")
	var direction := (CharacterBody3D.transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_lrhn5"]

[sub_resource type="CapsuleMesh" id="CapsuleMesh_rkhd4"]

[sub_resource type="SceneReplicationConfig" id="SceneReplicationConfig_agfs1"]

[node name="CharacterBody3D" type="CharacterBody3D"]
script = SubResource("GDScript_dkjbp")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_lrhn5")

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
mesh = SubResource("CapsuleMesh_rkhd4")

[node name="Camera3D" type="Camera3D" parent="."]

[node name="RayCast3D" type="RayCast3D" parent="Camera3D"]

[node name="MultiplayerSynchronizer" type="MultiplayerSynchronizer" parent="Camera3D/RayCast3D"]
replication_config = SubResource("SceneReplicationConfig_agfs1")
